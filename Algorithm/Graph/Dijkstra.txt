다익스트라 알고리듬

가중 그래프에서 어떤 노드 n -> v 까지의 최소 가중치 합을 찾는 최단경로 알고리듬

방대한 노드 네트워크에 사용하기 충분히 빠름
변의 가중치가 음수인 경우에는 제대로 작동하지 않음
실세계에서 많이 사용
-지도/네비게이션
-IP라우팅
-경유 항공편 찾기
-등등

다익스트라 알고리듬 기초
모든 노드를  한 번씩 방문하여 아래의 연산을 함
1. 아직 방문 안 한 노드 중 가장 가까운 노드 n을 선택
2. n의 각 이웃 노드 m으로 여행하는 거리를 계산 (n의 거리 + n->m거리)
3. 이 결과가 m의 기존 거리보다 가까우면 m의 거리를 업데이트
딱 보니 다익스트라는 DP다.


다익스트라의 시간 복잡도

방문하는 노드수 N
최소 거리 노드 선택 N->우선순위 큐 사용하면 Log n으로 줄일 수 있음 
모든 변을 한번씩 지나감 E->최소 거리 노드 선택을 Log n으로 바꾸면 log n으로 바뀜
O(N^2 + E) = O(n^2)

피보나치 힙을 사용하면 이론 상 시간 복잡도를 더 줄일 수 있음
그러나 실제 실행 속도는 다른 힙보다 그다지 안 빠를 수 있음

다익스트라와 음의 가중치

음수의 가중치가 있는 그래프에 다익스트라 알고리듬을 적용할 때 오작동이 나는 이유
한번 방문한 노드는 다시 방문하지 않기 때문
변의 가중치가 언제나 양수라 가정한 알고리듬-> 다음 거리는 언제나 이미 방문한 거리 이상
->벨만 포드 알고리듬으로 해결 가능
