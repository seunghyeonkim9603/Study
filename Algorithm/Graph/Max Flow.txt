최대 유량 알고리듬

흐름 네트워크

변의 가중치가 용량을 나타내는 방향 그래프
어떤 것의 지속적인 이동을 표현하기에 적합
-데이터 전송
-전기 보내기
-수돗물 보내기
-고속도로를 통행하는 차량의 수
용량을 초과하여 보낼 수 없음

네트워크 유량 문제
어떤 흐름 네트워크에서 유량을 결정하는 문제
-최대 유량 문제
-최소 비용 유량 문제
-다중 상품 흐름 문제
-0인곳이 없는 흐름 문제

최대 유량 문제
어떤 노드에서 다른 노드까지 보낼 수 있는 최대 양을 결정하는 문제
예) 최고 데이터 전송 속도, 최대 교통량

최대 유량 알고리듬

효율적인 대표 알고리듬
포드-풀커슨, 에드몬드 카프 알고리듬

에드몬드 카프 알고리듬의 기본 개념
1. 각 변의 유량을 0으로 초기화
2. 시작점->도착점 까지 최단 경로를 찾음
3. 2에서 찾은 최단 경로를 통해 보낼 수 있는 최대 유량을 각변에 더함
4. 경로를 찾을 수 없을 때 까지 2, 3을 반복

back edge
위 알고리듬은 최단 거리를 찾을 때 어떤 순서로 찾느냐에 따라 최대 유량 값이 바뀜
한번 유량이 흘러간 경로를 막기 때문에 더 나은 선택지를 고르지 못할 수 있음
그래서 유량이 분산되어야 함
유량 분산을 위한 방법 back edge

에드몬드 카프 알고리듬
1. 각 변마다 방향이 반대인 용량이 0인 back edge를 추가
2. 모든 변의 유량을 0으로 초기화
3. 용량이 남아있는 변들 중에 S->T의 최단 경로를 찾음(BFS)
a)최단 경로에 있는 각 변의 잔여 용량 중 최솟값을 취함
b) 그 값을 경로 상에 있는 각 변에 유량에 더함
c) 1에서 추가한 각변에 대응하는 back edge에서 그만큼의 유량을 뺌
4. 경로가 아직 존재한다면 3번으로 돌아감
5. T로 들어오는 모든 유량의 합을 반환

최대 유량 문제 예
순환-수요 문제
야구 탈락 문제
단체 미팅 문제
항공운행 스케줄 짜기 문제
프로젝트 선택문제
이미지 세분화 등

기타 그래프 문제들
클릭
그래프 색칠
독립집합
이분 그래프
정점 커퍼
매칭
등