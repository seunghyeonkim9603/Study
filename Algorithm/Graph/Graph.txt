그래프


그래프의 정의와 용도

데이터들과 그 관계를 보여주는 방법 중 하나
서로 연관 있는 노드의 집합
네트워크 형태의 관계를 보여주기에 적합
복잡한 실세계의 문제를 모델링하기에 적절

무방향 그래프의 최대 변 개수
n(n - 1) / 2

그래프를 사용해 풀 수 있는 문제들
여러 스케줄링 관련
두 위치 사이의 여행 경로 관련
분자를 구성하는 원자들의 결합 관련
인터넷에세 데이터 패킷이 전달되는 경로 관련
대규모 프로젝트에서 일감 사이의 의존성 관련
도시의 전기 공급 그리드 관련
sns에서 친구 관계 관련


인접 행렬의 장단점

쉽게 구현 가능
변 제거 시간 복잡도 O(1)
어떤 노드에서 특정 노드로 이어진 edge가 존재하는지 O(1) 판별 가능

단점
공간을 더 차지함 O(n^2)
언제나 같은 공간을 차지
- 연결된 노드가 많으나 적으나 노드 수에 비례함
인접 행렬을 만드는 시간은 O(n^2)
인접 노드를 찾는 시간은 O(N)

인접 리스트 장단점

공간을 적게 사용
O(N + E)
최악 : O(N^2)

단점
어떤 노드에서 특정 노드로 이어진 edge가 존재하는지 O(1)판별 불가능

위상 정렬

그래프의 노드를 일직선으로 정렬하는 방법
우선 순위가 바뀌지 않음
DAG(비순환 방향 그래프)만 유효한 위상 정렬이 가능
알고리듬을 어떻게 작성했냐에 따라 정렬된 결과는 달라 질 수 있음

위상정렬의 용도
실제로 위상 정렬을 한다.
위상 정렬이 가능한 그래프인지 판단 즉, 순환이 있는지 없는지

관계에서 순서를 정하는 매우 많은 곳에 사용 가능
프로젝트 일정 만들기
cpu명령어 실행 순서 결정
스프레드 시트 셀 평가 순서 결정
컴파일 순서 결정
DB테이블 로딩 순서 결정
선수 순위 결정

DFS를 사용한 위상정렬
후위순회-> 역순 출력

강한 결합 요소 (Strongly Connected Component, SCC)

방향 그래프에서 끈끈한 관계를 가지는 노드들의 최대 그룹
집합에 속한 모든 노드 쌍 u, v에 대해 u->v, v->u가 직간접적으로 연결 된 가장 큰 집합
방향 그래프에서 서로 순환하는 노드들의 집합

SCC의 주용도는 최적화
다른 알고리듬에서 고려해야 할 정점 수를 줄여줌
예) 1. 그래프를 여러 SCC로 분리 
2. 각 SCC에 대해 알고리듬을 실행
3. 그 결과를 합침
실제 문제를 풀기 위해 SCC를 사용하는 경우도 있음

위상정렬과 SCC

위상정렬은 DAG(비순환 방향 그래프) 에서 정상적으로 작동한다. 
그러나 SCC를 사용하면 순환 그래프에서도 위상 정렬이 가능하게 된다.
어떤 순환 그래프에 속하는 모든 노드들을 SCC로 치환하게 되면 해당 그래프는
순환이 없어짐으로 DAG가 되어 위상정렬이 가능해진다.

강한 결합 요소 알고리듬
DFS기반
-코사라주 알고리듬
-타잔 알고리듬
-경로 기반 알고리듬
도달 가능성 기반 알고리듬 (분할 정복)
 
코사라주 알고리듬
1. 그래프 G를 DFS 후위 순회 한 후 역순한다. <-위상정렬과 비슷
2. G의 전치 그래프를 계산한다. 즉 방향 그래프의 방향을 뒤집는다.
3. 1.번에서 역순한 노드의 순서대로 전치그래프에서 DFS한다.
-3번을 모든 노드에 적용했을 때 어떤 노드 N에서 DFS로 방문한 다른 노드 u가 있다면
N을 포함한 노드u들은 SCC가 된다.

강한 결합 요소의 용도

주로 복잡한 네트워크 관계관련
주로 복잡한 네트워크 관계 관련
-신경 과학에서도 사용
방대한 양의 데이터에서 연관된 그룹 찾기에 유용
예)
여전히 진입이 가능하게 보장하면서 일방 통행로 봉쇄하기
한 도시에서 다른 도시로 비행기 여행이 가능한지 확인
sns에서 직장 동료, 학교 동기 찾기
sns에서 취미나 성향이 같은 사람 찾기



